# This program is designed to generate a GUI using the "tkinter" package
# to display a basic interactive calculator. For now, the mathematical
# capabilities of the calculator are limited to basic arithmetic.

# The program should allow for a display, have interactable buttons to update 
# said display, perform and display computations as entered, be able to
# clear the display without returning the value of the expression, and respond
# sensibly to nonsensical inputs (e.g. attempts to divide by zero, etc.)

# NB: originally programmed in Python 3.12.4 using tkinter

import tkinter

from tkinter import *

expression = ""

def operate(n): # getting the calculator to update the required calculation
    global expression
    expression += str(n)
    answer.set(expression)

def equals(): # getting the calculator to compute a calculation we input
    try:
        global expression
        answer.set(str(eval(expression)))
        expression = "" # resets the calculator:
                        # ready for another computation

    except: # in case of division by zero error etc.
        answer.set("error")
        expression = ""

def clear(): # enable the user to start over
    global expression
    expression = ""
    answer.set("")

gui = Tk()

gui.configure(background="black")

gui.title("Basic Arithmetic Calculator")

gui.geometry("340x150")

answer = StringVar()

expression_box = Label(gui, width = 28, textvariable=answer)
expression_box.grid(columnspan=4, ipadx=69)

button1 = Button(gui, text = " 1 ", fg = "brown", bg = "gold", 
                    command=lambda: operate(1), height = 1, width = 7)
button1.grid(row=2, column=0)

button2 = Button(gui, text = " 2 ", fg = "brown", bg = "gold", 
                    command=lambda: operate(2), height = 1, width = 7)
button2.grid(row=2, column=1)

button3 = Button(gui, text = " 3 ", fg = "brown", bg = "gold", 
                    command=lambda: operate(3), height = 1, width = 7)
button3.grid(row=2, column=2)

button4 = Button(gui, text = " 4 ", fg = "brown", bg = "gold", 
                    command=lambda: operate(4), height = 1, width = 7)
button4.grid(row=3, column=0)

button5 = Button(gui, text = " 5 ", fg = "brown", bg = "gold", 
                    command=lambda: operate(5), height = 1, width = 7)
button5.grid(row=3, column=1)

button6 = Button(gui, text = " 6 ", fg = "brown", bg = "gold", 
                    command=lambda: operate(6), height = 1, width = 7)
button6.grid(row=3, column=2)

button7 = Button(gui, text = " 7 ", fg = "brown", bg = "gold", 
                    command=lambda: operate(7), height = 1, width = 7)
button7.grid(row=4, column=0)

button8 = Button(gui, text = " 8 ", fg = "brown", bg = "gold", 
                    command=lambda: operate(8), height = 1, width = 7)
button8.grid(row=4, column=1)

button9 = Button(gui, text = " 9 ", fg = "brown", bg = "gold", 
                    command=lambda: operate(9), height = 1, width = 7)
button9.grid(row=4, column=2)

button0 = Button(gui, text = " 0 ", fg = "brown", bg = "gold", 
                    command=lambda: operate(0), height = 1, width = 7)
button0.grid(row=5, column=0)

plus = Button(gui, text = " + ", fg = "brown", bg = "gold",
                  command=lambda: operate("+"), height = 1, width = 7)
plus.grid(row=2, column=3)

minus = Button(gui, text = " - ", fg = "brown", bg = "gold",
                   command=lambda: operate("-"), height = 1, width = 7)
minus.grid(row=3, column=3)

times = Button(gui, text = " x ", fg = "brown", bg = "gold",
                   command=lambda: operate("*"), height = 1, width = 7)
times.grid(row=4, column=3)

slash = Button(gui, text = " / ", fg = "brown", bg = "gold",
                   command=lambda: operate("/"), height = 1, width = 7)
slash.grid(row=5, column=3)

clr = Button(gui, text = "Clear", fg = "brown", bg = "gold",
                   command=lambda: clear(), height = 1, width = 7)
clr.grid(row=5, column=1)

eq = Button(gui, text = " = ", fg = "brown", bg = "gold",
                   command=lambda: equals(), height = 1, width = 7)
eq.grid(row=5, column=2)

dec_point = Button(gui, text = " . ", fg = "brown", bg = "gold",
                   command=lambda: operate("."), height = 1, width = 7)
dec_point.grid(row=6, column=0)

gui.mainloop()
